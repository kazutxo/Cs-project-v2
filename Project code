import mysql.connector
from tabulate import tabulate

# Database Connection
def connect_db():
    return mysql.connector.connect(
        host="localhost",
        user="root",
        password="admin@123",  
        database="art_gallery"
    )

# Add Artist
def add_artist():
    name = input("Enter Artist's Name: ")
    bio = input("Enter Artist's Bio: ")
    contact_info = input("Enter Artist's Contact Info: ")
    conn = connect_db()
    cursor = conn.cursor()
    
    cursor.execute("INSERT INTO artist (name, bio, contact_info) VALUES (%s, %s, %s)", 
                   (name, bio, contact_info))
    conn.commit()
    
    # Fetch the last inserted artist_id
    artist_id = cursor.lastrowid
    print(f"Artist added successfully with Artist ID: {artist_id}")
    conn.close()

# Add Artwork
def add_artwork():
    artist_id = input("Enter Artist ID: ")
    title = input("Enter Artwork Title: ")
    medium = input("Enter Artwork Medium: ")
    size = input("Enter Artwork Size: ")
    price = float(input("Enter Artwork Price: "))
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO artworks (artist_id, title, medium, size, price) VALUES (%s, %s, %s, %s, %s)",
                   (artist_id, title, medium, size, price))
    conn.commit()
    print("Artwork added successfully.")
    conn.close()

# Add Exhibition
def add_exhibition():
    artist_id = input("Enter Artist ID: ")
    title = input("Enter Exhibition Title: ")
    location = input("Enter Exhibition Location: ")
    start_date = input("Enter Start Date (YYYY-MM-DD): ")
    end_date = input("Enter End Date (YYYY-MM-DD): ")
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO exhibition (artist_id, title, location, start_date, end_date) VALUES (%s, %s, %s, %s, %s)",
                   (artist_id, title, location, start_date, end_date))
    conn.commit()
    print("Exhibition added successfully.")
    conn.close()

# Add Sale
def add_sale():
    artist_id = input("Enter Artist ID: ")
    artwork_id = input("Enter Artwork ID: ")
    client_name = input("Enter Client Name: ")
    sale_date = input("Enter Sale Date (YYYY-MM-DD): ")
    sale_price = float(input("Enter Sale Price: "))
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO sales (artist_id, artwork_id, client_name, sale_date, sale_price) VALUES (%s, %s, %s, %s, %s)",
                   (artist_id, artwork_id, client_name, sale_date, sale_price))
    conn.commit()
    print("Sale recorded successfully.")
    conn.close()

# Search and Display Artist and Related Data
def search_artist():
    artist_id = input("Enter Artist ID or press Enter to search by name: ")
    conn = connect_db()
    cursor = conn.cursor(dictionary=True)
    if artist_id:
        cursor.execute("SELECT * FROM artist WHERE artist_id = %s", (artist_id,))
    else:
        name = input("Enter Artist Name: ")
        cursor.execute("SELECT * FROM artist WHERE name = %s", (name,))
    
    artist = cursor.fetchall()
    if artist:
        print("\nArtist Details:")
        print(tabulate(artist, headers="keys", tablefmt="grid"))
        
        # Display Related Data: Artworks, Exhibitions, and Sales
        for table, label in [("artworks", "Artworks"), ("exhibition", "Exhibitions"), ("sales", "Sales")]:
            cursor.execute(f"SELECT * FROM {table} WHERE artist_id = %s", (artist[0]['artist_id'],))
            data = cursor.fetchall()
            if data:
                print(f"\n{label}:")
                print(tabulate(data, headers="keys", tablefmt="grid"))
            else:
                print(f"\n{label}: No records found.")
    else:
        print("Artist not found.")
    conn.close()

# Display All Tables
def display_tables():
    conn = connect_db()
    cursor = conn.cursor(dictionary=True)
    for table in ["artist", "artworks", "exhibition", "sales"]:
        cursor.execute(f"SELECT * FROM {table}")
        data = cursor.fetchall()
        print(f"\nTable: {table.capitalize()}")
        print(tabulate(data, headers="keys", tablefmt="grid"))
    conn.close()

# Delete Artist and Related Data
def delete_artist():
    artist_id = input("Enter Artist ID to delete: ")
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM artist WHERE artist_id = %s", (artist_id,))
    conn.commit()
    print("Artist and all related data deleted successfully.")
    conn.close()

# Main Menu
def main_menu():
    while True:
        print("\nArt Gallery Management System")
        print("1. Add Artist")
        print("2. Add Artwork")
        print("3. Add Exhibition")
        print("4. Add Sale")
        print("5. Search and Display Artist Details")
        print("6. Display All Tables")
        print("7. Delete Artist and Related Data")
        print("8. Exit")
        choice = input("Enter your choice: ")
        
        if choice == '1':
            add_artist()
        elif choice == '2':
            add_artwork()
        elif choice == '3':
            add_exhibition()
        elif choice == '4':
            add_sale()
        elif choice == '5':
            search_artist()
        elif choice == '6':
            display_tables()
        elif choice == '7':
            delete_artist()
        elif choice == '8':
            print("Exiting program.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main_menu()
